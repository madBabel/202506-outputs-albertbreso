name: Autograding Tests
on:
  repository_dispatch:
  workflow_dispatch:
permissions:
  checks: write
  actions: read
  contents: read


jobs:
  autograding-tests:
    if: github.actor != 'github-classroom[bot]'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check file exists
        id: file
        run: |
          test -f .github/workflows/outputs.yaml && echo "success" || (echo "fail" && exit 1)

      - name: Check input build-status definition
        id: input
        run: |
          if grep -q "build-status:" .github/workflows/outputs.yaml &&
             grep -q "type: choice" .github/workflows/outputs.yaml &&
             grep -q "default: success" .github/workflows/outputs.yaml &&
             grep -q "success" .github/workflows/outputs.yaml &&
             grep -q "failure" .github/workflows/outputs.yaml &&
             grep -q "Choose the build status for the demo" .github/workflows/outputs.yaml; then
            echo "success"
          else
            echo "fail"
            exit 1
          fi

      - name: Check GITHUB_OUTPUT is printed
        id: output_path
        run: |
          grep -q "GITHUB_OUTPUT" .github/workflows/outputs.yaml && echo "success" || (echo "fail" && exit 1)

      - name: Check input used in echo to output
        id: echo_input
        run: |
          grep -q "echo \"status=\${{ inputs.build-status }}\"" .github/workflows/outputs.yaml && echo "success" || (echo "fail" && exit 1)

      - name: Check build job outputs
        id: job_outputs
        run: |
          grep -q "outputs:" .github/workflows/outputs.yaml &&
          grep -q "build-status:.*steps.build.outputs.status" .github/workflows/outputs.yaml && echo "success" || (echo "fail" && exit 1)

      - name: Check deploy job depends on build
        id: deploy_needs
        run: |
          grep -q "needs: build" .github/workflows/outputs.yaml && echo "success" || (echo "fail" && exit 1)

      - name: Check deploy conditional execution
        id: deploy_conditional
        run: |
          grep -q "if:.*needs.build.outputs.build-status == 'success'" .github/workflows/outputs.yaml && echo "success" || (echo "fail" && exit 1)

      - name: Check Deploy step output message
        id: deploy_step
        run: |
          grep -q "Deploying" .github/workflows/outputs.yaml && echo "success" || (echo "fail" && exit 1)

  autograding-reporter:
    needs: autograding-tests
    runs-on: ubuntu-latest
    steps:
      - name: Test 1 - Workflow file exists
        uses: classroom-resources/autograding-io-grader@v1
        id: test1
        with:
          test-name: 'Workflow file exists'
          command: 'echo ${{ needs.autograding-tests.outputs.result }}'
          input: ''
          expected-output: 'success'
          comparison-method: 'exact'
          max-score: 10

      - name: Test 2 - Input correctly defined
        uses: classroom-resources/autograding-io-grader@v1
        id: test2
        with:
          test-name: 'Input "build-status" correctly defined'
          command: 'echo ${{ steps.input.outputs.result }}'
          input: ''
          expected-output: 'success'
          comparison-method: 'exact'
          max-score: 10

      - name: Test 3 - Prints GITHUB_OUTPUT
        uses: classroom-resources/autograding-io-grader@v1
        id: test3
        with:
          test-name: 'GITHUB_OUTPUT printed'
          command: 'echo ${{ steps.output_path.outputs.result }}'
          input: ''
          expected-output: 'success'
          comparison-method: 'exact'
          max-score: 10

      - name: Test 4 - Echo includes build-status input
        uses: classroom-resources/autograding-io-grader@v1
        id: test4
        with:
          test-name: 'Echo uses build-status input'
          command: 'echo ${{ steps.echo_input.outputs.result }}'
          input: ''
          expected-output: 'success'
          comparison-method: 'exact'
          max-score: 10

      - name: Test 5 - Job outputs defined
        uses: classroom-resources/autograding-io-grader@v1
        id: test5
        with:
          test-name: 'Job outputs correctly defined'
          command: 'echo ${{ steps.job_outputs.outputs.result }}'
          input: ''
          expected-output: 'success'
          comparison-method: 'exact'
          max-score: 10

      - name: Test 6 - Deploy depends on build
        uses: classroom-resources/autograding-io-grader@v1
        id: test6
        with:
          test-name: 'Deploy depends on build'
          command: 'echo ${{ steps.deploy_needs.outputs.result }}'
          input: ''
          expected-output: 'success'
          comparison-method: 'exact'
          max-score: 10

      - name: Test 7 - Deploy uses correct condition
        uses: classroom-resources/autograding-io-grader@v1
        id: test7
        with:
          test-name: 'Deploy uses output condition'
          command: 'echo ${{ steps.deploy_conditional.outputs.result }}'
          input: ''
          expected-output: 'success'
          comparison-method: 'exact'
          max-score: 10

      - name: Test 8 - Deploy step echo
        uses: classroom-resources/autograding-io-grader@v1
        id: test8
        with:
          test-name: 'Deploy step echoes correctly'
          command: 'echo ${{ steps.deploy_step.outputs.result }}'
          input: ''
          expected-output: 'success'
          comparison-method: 'exact'
          max-score: 10

      - name: Final Report
        uses: classroom-resources/autograding-grading-reporter@v1
        with:
          runners: test1,test2,test3,test4,test5,test6,test7,test8
        env:
          TEST1_RESULTS: "${{ steps.test1.outputs.result }}"
          TEST2_RESULTS: "${{ steps.test2.outputs.result }}"
          TEST3_RESULTS: "${{ steps.test3.outputs.result }}"
          TEST4_RESULTS: "${{ steps.test4.outputs.result }}"
          TEST5_RESULTS: "${{ steps.test5.outputs.result }}"
          TEST6_RESULTS: "${{ steps.test6.outputs.result }}"
          TEST7_RESULTS: "${{ steps.test7.outputs.result }}"
          TEST8_RESULTS: "${{ steps.test8.outputs.result }}"
